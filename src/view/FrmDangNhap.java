package view;

import Service.TaiKhoanService;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.TaiKhoan;

/**
 *
 * @author Administrator
 */
public class FrmDangNhap extends javax.swing.JDialog {

    TaiKhoanService taiKhoanService = new TaiKhoanService();
    List<TaiKhoan> lstTaiKhoan = new ArrayList<>();

    public FrmDangNhap(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("account.txt"));
            lstTaiKhoan = (List<TaiKhoan>) ois.readObject();

            ois.close();
            for (TaiKhoan taiKhoan : lstTaiKhoan) {
                txtUserName.setText(taiKhoan.getTenTaiKhoan());
                txtPassword.setText(taiKhoan.getMatKhau());

            }

        } catch (Exception e) {
//            e.printStackTrace();
        }
        System.out.println(lstTaiKhoan);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLoginForm = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        chkRemember = new javax.swing.JCheckBox();
        btnLogin = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(null);
        setIconImages(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLoginForm.setBackground(new java.awt.Color(255, 255, 255));
        lblLoginForm.setFont(new java.awt.Font("Consolas", 0, 30)); // NOI18N
        lblLoginForm.setForeground(new java.awt.Color(255, 255, 255));
        lblLoginForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginForm.setText("LOGIN FORM");
        getContentPane().add(lblLoginForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 265, 50));

        lblUsername.setBackground(new java.awt.Color(15, 255, 255));
        lblUsername.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("User Name");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 128, 35));

        lblPassword.setBackground(new java.awt.Color(15, 255, 255));
        lblPassword.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPassword.setText("PassWord");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 128, 35));

        txtUserName.setBackground(new java.awt.Color(217, 217, 217));
        txtUserName.setForeground(new java.awt.Color(0, 0, 0));
        txtUserName.setPreferredSize(new java.awt.Dimension(302, 35));
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 302, 35));

        chkRemember.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        chkRemember.setForeground(new java.awt.Color(255, 255, 255));
        chkRemember.setText("Remember ?");
        chkRemember.setPreferredSize(new java.awt.Dimension(118, 30));
        chkRemember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRememberActionPerformed(evt);
            }
        });
        getContentPane().add(chkRemember, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 150, 30));

        btnLogin.setBackground(new java.awt.Color(217, 217, 217));
        btnLogin.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.setPreferredSize(new java.awt.Dimension(100, 33));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 100, 33));

        btnCancel.setBackground(new java.awt.Color(217, 217, 217));
        btnCancel.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setPreferredSize(new java.awt.Dimension(100, 33));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 100, 33));

        txtPassword.setBackground(new java.awt.Color(217, 217, 217));
        txtPassword.setForeground(new java.awt.Color(0, 0, 0));
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 302, 35));

        lblBackground.setBackground(new java.awt.Color(217, 217, 217));
        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/6.jpg"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkRememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRememberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRememberActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        try {

            String username = txtUserName.getText();
            String passWord = txtPassword.getText();
            if (username.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập vào tên đăng nhập!");
                txtUserName.requestFocus();
                return;
            }
            if (passWord.equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập vào mật khẩu!");
                txtPassword.requestFocus();
                return;
            }
            if (passWord.length() <= 7 || passWord.length() >= 15) {
                JOptionPane.showMessageDialog(this, "Nhập mật khẩu trong khoảng 7 - 15 kí tự!");
                txtPassword.requestFocus();
                return;
            }
            TaiKhoan taiKhoan = new TaiKhoan(username, passWord, "");
            int ketQua = taiKhoanService.xacThuctaiKhoan(taiKhoan);
            if (ketQua == 0) {
                JOptionPane.showMessageDialog(this, "Tên tài khoản không tồn tại!");
                txtUserName.requestFocus();
                return;
            } else if (ketQua == -1) {
                JOptionPane.showMessageDialog(this, "Mật khẩu nhập vào không đúng!");
                txtPassword.requestFocus();
                return;
            } else if (ketQua == 1) {
                if (txtUserName.getText().equals("admin01") || txtUserName.getText().equals("admin02")) {
                    JOptionPane.showMessageDialog(this, "Đăng nhập thành công tài khoản quản lý");
                    if (chkRemember.isSelected()) {
                        try {
                            TaiKhoan taiKhoanLuu = new TaiKhoan();
                            taiKhoanLuu.setTenTaiKhoan(txtUserName.getText());
                            taiKhoanLuu.setMatKhau(txtPassword.getText());
                            lstTaiKhoan.add(taiKhoanLuu);
                            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("account.txt"));
                            oos.writeObject(lstTaiKhoan);
                            oos.flush();
                            oos.close();
                            JOptionPane.showMessageDialog(this, "Đã nhớ mật khẩu");
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Lỗi nhớ mật khẩu");
                        }
                    }
                    new FrmQuanLy().setVisible(true);
                    this.dispose();
                } else if (txtUserName.getText().equals("nhanvien01") || txtUserName.getText().equals("nhanvien02")) {
                    JOptionPane.showMessageDialog(this, "Đăng nhập thành công tài khoản nhân viên");
                    if (chkRemember.isSelected()) {
                        try {
                            TaiKhoan taiKhoanLuu = new TaiKhoan();
                            taiKhoanLuu.setTenTaiKhoan(txtUserName.getText());
                            taiKhoanLuu.setMatKhau(txtPassword.getText());
                            lstTaiKhoan.add(taiKhoanLuu);
                            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("account.txt"));
                            oos.writeObject(lstTaiKhoan);
                            oos.flush();
                            oos.close();
                            JOptionPane.showMessageDialog(this, "Đã nhớ mật khẩu");
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Lỗi nhớ mật khẩu");
                        }
                    }
                    new FrmNhanVien().setVisible(true);
                    this.dispose();
                } else if (txtUserName.getText().equals("thuviec01") || txtUserName.getText().equals("thuviec02")) {
                    JOptionPane.showMessageDialog(this, "Đăng nhập thành công tài khoản nhân viên");
                    if (chkRemember.isSelected()) {
                        try {
                            TaiKhoan taiKhoanLuu = new TaiKhoan();
                            taiKhoanLuu.setTenTaiKhoan(txtUserName.getText());
                            taiKhoanLuu.setMatKhau(txtPassword.getText());
                            lstTaiKhoan.add(taiKhoanLuu);
                            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("account.txt"));
                            oos.writeObject(lstTaiKhoan);
                            oos.flush();
                            oos.close();
                            JOptionPane.showMessageDialog(this, "Đã nhớ mật khẩu");
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Lỗi nhớ mật khẩu");
                        }
                    } else {
                        TaiKhoan taiKhoanLuu = new TaiKhoan();
                        taiKhoanLuu.setTenTaiKhoan("");
                        taiKhoanLuu.setMatKhau("");
                        lstTaiKhoan.add(taiKhoanLuu);
                        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("account.txt"));
                        oos.writeObject(lstTaiKhoan);
                        oos.flush();
                        oos.close();
                        JOptionPane.showMessageDialog(this, "Đã bỏ nhớ mật khẩu");
                    }
                    new FrmNhanVien().setVisible(true);
                    this.dispose();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi đăng nhập!");
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //Thoát
        int hoi = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn dừng việc đăng nhập không?");
        if (hoi != JOptionPane.YES_OPTION) {
            return;
        }
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmDangNhap dialog = new FrmDangNhap(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox chkRemember;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblLoginForm;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
